{
	"info": {
		"_postman_id": "545e6c3f-9468-4115-a5f8-2c4aedda23ea",
		"name": "Comment feature tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26184202"
	},
	"item": [
		{
			"name": "Validation",
			"item": [
				{
					"name": "Admin",
					"item": [
						{
							"name": "Обновление комментария админом с неправильным commentId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"Тело обновленного комментария\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/admin/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"admin",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "commentId",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление комментария админом с неправильным commentId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:8080/admin/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"admin",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "commentId",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Public",
					"item": [
						{
							"name": "Публичное получение комментария с неправильным commentId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Код статуса должен быть 404 и содержать данные в формате json\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "commentId",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Публичное получение всех комментариев с неправильным eventId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Код статуса должен быть 404 и содержать данные в формате json\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/comments?eventId=1000",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"comments"
									],
									"query": [
										{
											"key": "eventId",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User",
					"item": [
						{
							"name": "Создание комментария без контента",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
											"    pm.response.to.be.badRequest;\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/comments?eventId=1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"comments"
									],
									"query": [
										{
											"key": "eventId",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание комментария с неправильным userId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"ТестТест\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/comments?eventId=2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"comments"
									],
									"query": [
										{
											"key": "eventId",
											"value": "2"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание комментария с неправильным eventId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"ТестТест\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/comments?eventId=1000",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"comments"
									],
									"query": [
										{
											"key": "eventId",
											"value": "1000"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание комментария к неопубликованному событию",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 409 и данные в формате json\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"ТестТест\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/comments?eventId=1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"comments"
									],
									"query": [
										{
											"key": "eventId",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Обновление комментария пользователем с неправильным userId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"content\": \"Тело обновленного комментария\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Обновление комментария пользователем с неправильным commentId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1000,\r\n    \"content\": \"Тело обновленного комментария\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/:userId/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"comments"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление комментария пользователем с неправильным userId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:8080/users/:userId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1000"
										},
										{
											"key": "commentId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление комментария пользователем с неправильным commentId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:8080/users/:userId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										},
										{
											"key": "commentId",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение комментария для пользователя с неправильным commentId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Код статуса должен быть 404 и содержать данные в формате json\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/:userId/comments/:commentId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										},
										{
											"key": "commentId",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка комментариев для пользователя с неправильным eventId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Код статуса должен быть 404 и содержать данные в формате json\", function () {\r",
											"    pm.response.to.be.notFound;\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/:userId/comments?eventId=1000",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										":userId",
										"comments"
									],
									"query": [
										{
											"key": "eventId",
											"value": "1000"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Создание первого комментария пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код статуса должен быть 200 или 201 и содержать данные в формате json\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Провека правильности созданного идентификатора 'id' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, 'Параметр \"id\" должен быть равен 1').to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Провека правильности созданного поля 'content' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData.content, 'Параметр \"content\" должен быть равен \"Тело нового комментария\"').to.eql(\"Тело нового комментария\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": \"Тело нового комментария\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/:userId/comments?eventId=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "2"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление комментария непричастным пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"content\": \"Тело обновленного комментария\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/:userId/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						":userId",
						"comments"
					],
					"variable": [
						{
							"key": "userId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание второго комментария пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код статуса должен быть 200 или 201 и содержать данные в формате json\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Провека правильности созданного идентификатора 'id' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, 'Параметр \"id\" должен быть равен 2').to.eql(2);\r",
							"});\r",
							"\r",
							"pm.test(\"Провека правильности созданного поля 'content' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData.content, 'Параметр \"content\" должен быть равен \"Тело второго комментария\"').to.eql(\"Тело второго комментария\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": \"Тело второго комментария\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/:userId/comments?eventId=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "2"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление первого комментария пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код статуса должен быть 200 или 201 и содержать данные в формате json\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/users/:userId/comments/:commentId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						":userId",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление комментария пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код статуса должен быть 200 или 201 и содержать данные в формате json\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Провека правильности обновленного идентификатора 'id' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, 'Параметр \"id\" должен быть равен 2').to.eql(2);\r",
							"});\r",
							"\r",
							"pm.test(\"Провека правильности обновленного поля 'content' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData.content, 'Параметр \"content\" должен быть равен \"Тело обновленного комментария\"').to.eql(\"Тело обновленного комментария\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2,\r\n    \"content\": \"Тело обновленного комментария\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/:userId/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						":userId",
						"comments"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение комментария по id пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код статуса должен быть 200 или 201 и содержать данные в формате json\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка правильности полученного идентификатора 'id' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, 'Параметр \"id\" должен быть равен 2').to.eql(2);\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка правильности полученного поля 'content' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData.content, 'Параметр \"content\" должен быть равен \"Тело обновленного комментария\"').to.eql(\"Тело обновленного комментария\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/:userId/comments/:commentId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						":userId",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "commentId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Публичное получение комментария по id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код статуса должен быть 200 или 201 и содержать данные в формате json\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка правильности полученного идентификатора 'id' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, 'Параметр \"id\" должен быть равен 2').to.eql(2);\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка правильности полученного поля 'content' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData.content, 'Параметр \"content\" должен быть равен \"Тело обновленного комментария\"').to.eql(\"Тело обновленного комментария\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/:commentId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "commentId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение всех комментариев от пользователя по событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код статуса должен быть 200 или 201 и содержать данные в формате json\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка списка полученных комментариев\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'Лист должен быть равен 1').to.eql(1);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/:userId/comments?eventId=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						":userId",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "2"
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Публичное получение всех комментариев от пользователя по событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код статуса должен быть 200 или 201 и содержать данные в формате json\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка списка полученных комментариев\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'Лист должен быть равен 1').to.eql(1);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments?eventId=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление комментария админом",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код статуса должен быть 200 или 201 и содержать данные в формате json\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка правильности обновленного идентификатора 'id' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, 'Параметр \"id\" должен быть равен 2').to.eql(2);\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка правильности обновленного поля 'content' у комментария\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData.content, 'Параметр \"content\" должен быть равен \"Тело дважды обновленного комментария\"').to.eql(\"Тело дважды обновленного комментария\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": \"Тело дважды обновленного комментария\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/comments/:commentId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "commentId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение всех комментариев от админа",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код статуса должен быть 200 или 201 и содержать данные в формате json\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка списка полученных комментариев\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'Лист должен быть равен 1').to.eql(1);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/admin/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление комментария админом",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код статуса должен быть 200 или 201 и содержать данные в формате json\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/admin/comments/:commentId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "commentId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		}
	]
}